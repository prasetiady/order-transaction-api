swagger: '2.0'
################################################################################
#                              API Information                                 #
################################################################################
info:
  version: 1.0
  title: Order Transaction API
  description: |
    This is specification for Order Transaction API
  contact:
    name: Dedy Prasetiady
    email: dedy.berastagi@gmail.com
################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
basePath: /v1
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
################################################################################
#                                   Tags                                       #
################################################################################
tags:
  - name: Customer
  - name: Product
  - name: Coupon
  - name: Order
################################################################################
#                                   Paths                                      #
################################################################################
paths:
  # Product Path
  /products:
    x-api-first-handler: 'v1.yaml.ProductHandler.products'
    get:
      tags:
        - Product
      description: Return all products
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  # Coupon Path
  /coupons:
    x-api-first-handler: 'v1.yaml.CouponHandler.coupons'
    get:
      tags:
        - Coupon
      description: Return all coupons
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Coupon'
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  # Customer Path
  /customers:
    x-api-first-handler: 'v1.yaml.CustomerHandler.customers'
    get:
      tags:
        - Customer
      description: Return all customers
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  /customer/{customerId}/cart:
    x-api-first-handler: 'v1.yaml.CustomerHandler.cart'
    get:
      tags:
        - Customer
      description: |
        Return shopping cart id based on customer id ( shopping cart is order
        that has not yet been submitted). Create new order if user exist but
        shopping cart not found.
      parameters:
        - name: customerId
          type: integer
          format: int32
          in: path
          required: true
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ShoppingCart'
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  /customer/{customerId}/orders:
    x-api-first-handler: 'v1.yaml.CustomerHandler.orders'
    get:
      tags:
        - Customer
      description: Return array of order based on customer id.
      parameters:
        - name: customerId
          type: integer
          format: int32
          in: path
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  # Order Path
  /order/{orderId}:
    x-api-first-handler: 'v1.yaml.OrderHandler.order'
    get:
      tags:
        - Order
      description: Return order details
      parameters:
        - name: orderId
          in: path
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: OK
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  /order/{orderId}/lineItem:
    x-api-first-handler: 'v1.yaml.OrderHandler.lineItem'
    post:
      tags:
        - Order
      description: Add product to an order
      parameters:
        - name: orderId
          type: integer
          format: int32
          in: path
          required: true
        - name: productId
          in: body
          schema:
            type: integer
            format: int32
          required: true
      responses:
        200:
          description: OK
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  /order/{orderId}/coupon:
    x-api-first-handler: 'v1.yaml.OrderHandler.coupon'
    post:
      tags:
        - Order
      description: Apply coupon to an order
      parameters:
        - name: orderId
          in: path
          type: integer
          format: int32
          required: true
        - name: couponCode
          in: body
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  /order/{orderId}/checkout:
    x-api-first-handler: 'v1.yaml.OrderHandler.checkout'
    put:
      tags:
        - Order
      description: Submit order (checkout)
      parameters:
        - name: orderId
          in: path
          type: integer
          format: int32
          required: true
        - name: shippingAddress
          in: body
          schema:
            $ref: '#/definitions/ShippingAddress'
          required: true
      responses:
        200:
          description: OK
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  /order/{orderId}/paymentProff:
    x-api-first-handler: 'v1.yaml.OrderHandler.paymentProff'
    post:
      tags:
        - Order
      description: Pay order, submit payment proff
      parameters:
        - name: orderId
          in: path
          type: integer
          format: int32
          required: true
        - name: paymentProff
          in: body
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  /order/{orderId}/verify:
    x-api-first-handler: 'v1.yaml.OrderHandler.verify'
    put:
      tags:
        - Order
      description: Verify Order
      parameters:
        - name: orderId
          in: path
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: OK
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  /order/{orderId}/ship:
    x-api-first-handler: 'v1.yaml.OrderHandler.ship'
    put:
      tags:
        - Order
      description: Ship Order
      parameters:
        - name: orderId
          in: path
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: OK
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
  /order/{orderId}/cancel:
    x-api-first-handler: 'v1.yaml.OrderHandler.cancel'
    put:
      tags:
        - Order
      description: Cancel Order
      parameters:
        - name: orderId
          in: path
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: OK
        500:
          description: error
          schema:
            $ref: '#/definitions/ErrorModel'
################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Coupon:
    required:
      - id
      - code
      - quantity
      - discountAmount
      - discountType
      - validFrom
      - validUntil
    properties:
      id:
        type: integer
        format: int32
      code:
        type: string
      quantity:
        type: integer
        format: int32
      discountAmount:
        type: number
        format: double
      discountType:
        type: string
      validFrom:
        type: string
      validUntil:
        type: string
  DiscountType:
    type: string
    default: PERCENTAGE
    enum:
      - PERCENTAGE
      - DECIMAL
  Product:
    required:
      - id
      - name
      - price
      - quantity
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      price:
        type: number
        format: double
      quantity:
        type: integer
        format: int32
  Customer:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
  LineItem:
    required:
      - id
      - orderId
      - productId
      - productName
      - productPrice
      - quantity
    properties:
      id:
        type: integer
        format: int32
      orderId:
        type: integer
        format: int32
      productId:
        type: integer
        format: int32
      productName:
        type: string
      productPrice:
        type: number
        format: double
      quantity:
        type: integer
        format: int32
  OrderStatus:
    type: string
    default: NEW
    enum:
      - NEW
      - HOLD
      - VERIFIED
      - SHIPPED
      - CANCELED
  Order:
    required:
      - id
      - customerId
      - status
      - isSubmitted
      - isPaid
    properties:
      id:
        type: integer
        format: int32
      customerId:
        type: integer
        format: int32
      status:
        type: string
      isSubmitted:
        type: boolean
      isPaid:
        type: boolean
  ShoppingCart:
    required:
      - orderId
    properties:
      orderId:
        type: integer
        format: int32
  ShippingAddress:
    required:
      - id
      - orderId
      - address
      - name
      - phoneNumber
      - email
    properties:
      id:
        type: integer
        format: int32
      orderId:
        type: integer
        format: int32
      address:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      email:
        type: string
  PaymentProff:
    required:
      - id
      - orderId
      - amount
      - note
      - paymentDate
    properties:
      id:
        type: integer
        format: int32
      orderId:
        type: integer
        format: int32
      amount:
        type: number
        format: double
      note:
        type: string
      paymentDate:
        type: string
  ErrorModel:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
